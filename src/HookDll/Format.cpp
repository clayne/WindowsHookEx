//
// WindowsHookEx - Test the behavior of the api SetWindowsHookEx
// Copyright (c) 2020 Mark Jansen
// SPDX-License-Identifier: MIT
//

#include "pch.h"
#include <strsafe.h>
#include "Format.h"

#define CASE_RETURN(x)  case x: return L ## #x;

LPCWSTR Format_HSHELL(int nCode)
{
    static WCHAR Buf[15];
    switch (nCode)
    {
        CASE_RETURN(HSHELL_WINDOWCREATED);
        CASE_RETURN(HSHELL_WINDOWDESTROYED);
        CASE_RETURN(HSHELL_ACTIVATESHELLWINDOW);
        CASE_RETURN(HSHELL_WINDOWACTIVATED);
        CASE_RETURN(HSHELL_GETMINRECT);
        CASE_RETURN(HSHELL_REDRAW);
        CASE_RETURN(HSHELL_TASKMAN);
        CASE_RETURN(HSHELL_LANGUAGE);
        CASE_RETURN(HSHELL_SYSMENU);
        CASE_RETURN(HSHELL_ENDTASK);
        CASE_RETURN(HSHELL_ACCESSIBILITYSTATE);
        CASE_RETURN(HSHELL_APPCOMMAND);
        CASE_RETURN(HSHELL_WINDOWREPLACED);
        CASE_RETURN(HSHELL_WINDOWREPLACING);
        CASE_RETURN(HSHELL_HIGHBIT);
        CASE_RETURN(HSHELL_FLASH);
        CASE_RETURN(HSHELL_RUDEAPPACTIVATED);
    default:
        StringCchPrintfW(Buf, ARRAYSIZE(Buf), L"?%d?", nCode);
        return Buf;
    }
}

LPCWSTR Format_CBT(int nCode)
{
    static WCHAR Buf[15];
    switch (nCode)
    {
        CASE_RETURN(HCBT_MOVESIZE);
        CASE_RETURN(HCBT_MINMAX);
        CASE_RETURN(HCBT_QS);
        CASE_RETURN(HCBT_CREATEWND);
        CASE_RETURN(HCBT_DESTROYWND);
        CASE_RETURN(HCBT_ACTIVATE);
        CASE_RETURN(HCBT_CLICKSKIPPED);
        CASE_RETURN(HCBT_KEYSKIPPED);
        CASE_RETURN(HCBT_SYSCOMMAND);
        CASE_RETURN(HCBT_SETFOCUS);
    default:
        StringCchPrintfW(Buf, ARRAYSIZE(Buf), L"?%d?", nCode);
        return Buf;
    }
}

LPCWSTR Format_Action(int nCode)
{
    static WCHAR Buf[15];
    switch (nCode)
    {
        CASE_RETURN(HC_ACTION);
        CASE_RETURN(HC_GETNEXT);
        CASE_RETURN(HC_SKIP);
        CASE_RETURN(HC_NOREMOVE);
        CASE_RETURN(HC_SYSMODALON);
        CASE_RETURN(HC_SYSMODALOFF);
    default:
        StringCchPrintfW(Buf, ARRAYSIZE(Buf), L"?%d?", nCode);
        return Buf;
    }
}

LPCWSTR Format_PM(int nCode)
{
    static WCHAR Buf[15];
    switch (nCode)
    {
        CASE_RETURN(PM_NOREMOVE);
        CASE_RETURN(PM_REMOVE);
        CASE_RETURN(PM_NOYIELD);
        CASE_RETURN(PM_QS_INPUT);
        CASE_RETURN(PM_QS_POSTMESSAGE);
        CASE_RETURN(PM_QS_PAINT);
        CASE_RETURN(PM_QS_SENDMESSAGE);
    default:
        StringCchPrintfW(Buf, ARRAYSIZE(Buf), L"?%d?", nCode);
        return Buf;
    }
}

LPCWSTR Format_HitTest(int nCode)
{
    static WCHAR Buf[15];
    switch (nCode)
    {
        CASE_RETURN(HTERROR);
        CASE_RETURN(HTTRANSPARENT);
        CASE_RETURN(HTNOWHERE);
        CASE_RETURN(HTCLIENT);
        CASE_RETURN(HTCAPTION);
        CASE_RETURN(HTSYSMENU);
        CASE_RETURN(HTSIZE);
        CASE_RETURN(HTMENU);
        CASE_RETURN(HTHSCROLL);
        CASE_RETURN(HTVSCROLL);
        CASE_RETURN(HTMINBUTTON);
        CASE_RETURN(HTMAXBUTTON);
        CASE_RETURN(HTLEFT);
        CASE_RETURN(HTRIGHT);
        CASE_RETURN(HTTOP);
        CASE_RETURN(HTTOPLEFT);
        CASE_RETURN(HTTOPRIGHT);
        CASE_RETURN(HTBOTTOM);
        CASE_RETURN(HTBOTTOMLEFT);
        CASE_RETURN(HTBOTTOMRIGHT);
        CASE_RETURN(HTBORDER);
        CASE_RETURN(HTOBJECT);
        CASE_RETURN(HTCLOSE);
        CASE_RETURN(HTHELP);
    default:
        StringCchPrintfW(Buf, ARRAYSIZE(Buf), L"?%d?", nCode);
        return Buf;
    }
}

LPCWSTR Format_WM(int nCode)
{
    static WCHAR Buf[15];
    switch (nCode)
    {
        CASE_RETURN(WM_NULL);
        CASE_RETURN(WM_CREATE);
        CASE_RETURN(WM_DESTROY);
        CASE_RETURN(WM_MOVE);
        CASE_RETURN(WM_SIZE);

        CASE_RETURN(WM_ACTIVATE);
        CASE_RETURN(WM_SETFOCUS);
        CASE_RETURN(WM_KILLFOCUS);
        CASE_RETURN(WM_ENABLE);
        CASE_RETURN(WM_SETREDRAW);
        CASE_RETURN(WM_SETTEXT);
        CASE_RETURN(WM_GETTEXT);
        CASE_RETURN(WM_GETTEXTLENGTH);
        CASE_RETURN(WM_PAINT);
        CASE_RETURN(WM_CLOSE);
        CASE_RETURN(WM_QUERYENDSESSION);
        CASE_RETURN(WM_QUERYOPEN);
        CASE_RETURN(WM_ENDSESSION);
        CASE_RETURN(WM_QUIT);
        CASE_RETURN(WM_ERASEBKGND);
        CASE_RETURN(WM_SYSCOLORCHANGE);
        CASE_RETURN(WM_SHOWWINDOW);
        CASE_RETURN(WM_SETTINGCHANGE);

        CASE_RETURN(WM_DEVMODECHANGE);
        CASE_RETURN(WM_ACTIVATEAPP);
        CASE_RETURN(WM_FONTCHANGE);
        CASE_RETURN(WM_TIMECHANGE);
        CASE_RETURN(WM_CANCELMODE);
        CASE_RETURN(WM_SETCURSOR);
        CASE_RETURN(WM_MOUSEACTIVATE);
        CASE_RETURN(WM_CHILDACTIVATE);
        CASE_RETURN(WM_QUEUESYNC);

        CASE_RETURN(WM_GETMINMAXINFO);
        CASE_RETURN(WM_PAINTICON);
        CASE_RETURN(WM_ICONERASEBKGND);
        CASE_RETURN(WM_NEXTDLGCTL);
        CASE_RETURN(WM_SPOOLERSTATUS);
        CASE_RETURN(WM_DRAWITEM);
        CASE_RETURN(WM_MEASUREITEM);
        CASE_RETURN(WM_DELETEITEM);
        CASE_RETURN(WM_VKEYTOITEM);
        CASE_RETURN(WM_CHARTOITEM);
        CASE_RETURN(WM_SETFONT);
        CASE_RETURN(WM_GETFONT);
        CASE_RETURN(WM_SETHOTKEY);
        CASE_RETURN(WM_GETHOTKEY);
        CASE_RETURN(WM_QUERYDRAGICON);
        CASE_RETURN(WM_COMPAREITEM);
        CASE_RETURN(WM_GETOBJECT);
        CASE_RETURN(WM_COMPACTING);
        CASE_RETURN(WM_COMMNOTIFY);
        CASE_RETURN(WM_WINDOWPOSCHANGING);
        CASE_RETURN(WM_WINDOWPOSCHANGED);

        CASE_RETURN(WM_POWER);
        CASE_RETURN(WM_COPYDATA);
        CASE_RETURN(WM_CANCELJOURNAL);
        CASE_RETURN(WM_NOTIFY);
        CASE_RETURN(WM_INPUTLANGCHANGEREQUEST);
        CASE_RETURN(WM_INPUTLANGCHANGE);
        CASE_RETURN(WM_TCARD);
        CASE_RETURN(WM_HELP);
        CASE_RETURN(WM_USERCHANGED);
        CASE_RETURN(WM_NOTIFYFORMAT);

        CASE_RETURN(WM_CONTEXTMENU);
        CASE_RETURN(WM_STYLECHANGING);
        CASE_RETURN(WM_STYLECHANGED);
        CASE_RETURN(WM_DISPLAYCHANGE);
        CASE_RETURN(WM_GETICON);
        CASE_RETURN(WM_SETICON);
        CASE_RETURN(WM_NCCREATE);
        CASE_RETURN(WM_NCDESTROY);
        CASE_RETURN(WM_NCCALCSIZE);
        CASE_RETURN(WM_NCHITTEST);
        CASE_RETURN(WM_NCPAINT);
        CASE_RETURN(WM_NCACTIVATE);
        CASE_RETURN(WM_GETDLGCODE);
        CASE_RETURN(WM_SYNCPAINT);
        CASE_RETURN(WM_NCMOUSEMOVE);
        CASE_RETURN(WM_NCLBUTTONDOWN);
        CASE_RETURN(WM_NCLBUTTONUP);
        CASE_RETURN(WM_NCLBUTTONDBLCLK);
        CASE_RETURN(WM_NCRBUTTONDOWN);
        CASE_RETURN(WM_NCRBUTTONUP);
        CASE_RETURN(WM_NCRBUTTONDBLCLK);
        CASE_RETURN(WM_NCMBUTTONDOWN);
        CASE_RETURN(WM_NCMBUTTONUP);
        CASE_RETURN(WM_NCMBUTTONDBLCLK);
        CASE_RETURN(WM_NCXBUTTONDOWN);
        CASE_RETURN(WM_NCXBUTTONUP);
        CASE_RETURN(WM_NCXBUTTONDBLCLK);
        CASE_RETURN(WM_INPUT_DEVICE_CHANGE);
        CASE_RETURN(WM_INPUT);
        CASE_RETURN(WM_KEYDOWN);
        CASE_RETURN(WM_KEYUP);
        CASE_RETURN(WM_CHAR);
        CASE_RETURN(WM_DEADCHAR);
        CASE_RETURN(WM_SYSKEYDOWN);
        CASE_RETURN(WM_SYSKEYUP);
        CASE_RETURN(WM_SYSCHAR);
        CASE_RETURN(WM_SYSDEADCHAR);
        CASE_RETURN(WM_UNICHAR);
        CASE_RETURN(UNICODE_NOCHAR);
        CASE_RETURN(WM_IME_STARTCOMPOSITION);
        CASE_RETURN(WM_IME_ENDCOMPOSITION);
        CASE_RETURN(WM_IME_COMPOSITION);

        CASE_RETURN(WM_INITDIALOG);
        CASE_RETURN(WM_COMMAND);
        CASE_RETURN(WM_SYSCOMMAND);
        CASE_RETURN(WM_TIMER);
        CASE_RETURN(WM_HSCROLL);
        CASE_RETURN(WM_VSCROLL);
        CASE_RETURN(WM_INITMENU);
        CASE_RETURN(WM_INITMENUPOPUP);
        CASE_RETURN(WM_GESTURE);
        CASE_RETURN(WM_GESTURENOTIFY);
        CASE_RETURN(WM_MENUSELECT);
        CASE_RETURN(WM_MENUCHAR);
        CASE_RETURN(WM_ENTERIDLE);
        CASE_RETURN(WM_MENURBUTTONUP);
        CASE_RETURN(WM_MENUDRAG);
        CASE_RETURN(WM_MENUGETOBJECT);
        CASE_RETURN(WM_UNINITMENUPOPUP);
        CASE_RETURN(WM_MENUCOMMAND);
        CASE_RETURN(WM_CHANGEUISTATE);
        CASE_RETURN(WM_UPDATEUISTATE);
        CASE_RETURN(WM_QUERYUISTATE);
        CASE_RETURN(WM_CTLCOLORMSGBOX);
        CASE_RETURN(WM_CTLCOLOREDIT);
        CASE_RETURN(WM_CTLCOLORLISTBOX);
        CASE_RETURN(WM_CTLCOLORBTN);
        CASE_RETURN(WM_CTLCOLORDLG);
        CASE_RETURN(WM_CTLCOLORSCROLLBAR);
        CASE_RETURN(WM_CTLCOLORSTATIC);
        CASE_RETURN(MN_GETHMENU);


        CASE_RETURN(WM_MOUSEMOVE);
        CASE_RETURN(WM_LBUTTONDOWN);
        CASE_RETURN(WM_LBUTTONUP);
        CASE_RETURN(WM_LBUTTONDBLCLK);
        CASE_RETURN(WM_RBUTTONDOWN);
        CASE_RETURN(WM_RBUTTONUP);
        CASE_RETURN(WM_RBUTTONDBLCLK);
        CASE_RETURN(WM_MBUTTONDOWN);
        CASE_RETURN(WM_MBUTTONUP);
        CASE_RETURN(WM_MBUTTONDBLCLK);
        CASE_RETURN(WM_MOUSEWHEEL);
        CASE_RETURN(WM_XBUTTONDOWN);
        CASE_RETURN(WM_XBUTTONUP);
        CASE_RETURN(WM_XBUTTONDBLCLK);
        CASE_RETURN(WM_MOUSEHWHEEL);
        CASE_RETURN(WM_PARENTNOTIFY);
        CASE_RETURN(WM_ENTERMENULOOP);
        CASE_RETURN(WM_EXITMENULOOP);
        CASE_RETURN(WM_NEXTMENU);
        CASE_RETURN(WM_SIZING);
        CASE_RETURN(WM_CAPTURECHANGED);
        CASE_RETURN(WM_MOVING);
        CASE_RETURN(WM_POWERBROADCAST);
        CASE_RETURN(WM_DEVICECHANGE);
        CASE_RETURN(WM_MDICREATE);
        CASE_RETURN(WM_MDIDESTROY);
        CASE_RETURN(WM_MDIACTIVATE);
        CASE_RETURN(WM_MDIRESTORE);
        CASE_RETURN(WM_MDINEXT);
        CASE_RETURN(WM_MDIMAXIMIZE);
        CASE_RETURN(WM_MDITILE);
        CASE_RETURN(WM_MDICASCADE);
        CASE_RETURN(WM_MDIICONARRANGE);
        CASE_RETURN(WM_MDIGETACTIVE);

        CASE_RETURN(WM_MDISETMENU);
        CASE_RETURN(WM_ENTERSIZEMOVE);
        CASE_RETURN(WM_EXITSIZEMOVE);
        CASE_RETURN(WM_DROPFILES);
        CASE_RETURN(WM_MDIREFRESHMENU);
        CASE_RETURN(WM_TOUCH);
        CASE_RETURN(WM_IME_SETCONTEXT);
        CASE_RETURN(WM_IME_NOTIFY);
        CASE_RETURN(WM_IME_CONTROL);
        CASE_RETURN(WM_IME_COMPOSITIONFULL);
        CASE_RETURN(WM_IME_SELECT);
        CASE_RETURN(WM_IME_CHAR);
        CASE_RETURN(WM_IME_REQUEST);
        CASE_RETURN(WM_IME_KEYDOWN);
        CASE_RETURN(WM_IME_KEYUP);
        CASE_RETURN(WM_MOUSEHOVER);
        CASE_RETURN(WM_MOUSELEAVE);
        CASE_RETURN(WM_NCMOUSEHOVER);
        CASE_RETURN(WM_NCMOUSELEAVE);
        CASE_RETURN(WM_WTSSESSION_CHANGE);

        CASE_RETURN(WM_TABLET_FIRST);
        CASE_RETURN(WM_TABLET_LAST);
        CASE_RETURN(WM_CUT);
        CASE_RETURN(WM_COPY);
        CASE_RETURN(WM_PASTE);
        CASE_RETURN(WM_CLEAR);
        CASE_RETURN(WM_UNDO);
        CASE_RETURN(WM_RENDERFORMAT);
        CASE_RETURN(WM_RENDERALLFORMATS);
        CASE_RETURN(WM_DESTROYCLIPBOARD);
        CASE_RETURN(WM_DRAWCLIPBOARD);
        CASE_RETURN(WM_PAINTCLIPBOARD);
        CASE_RETURN(WM_VSCROLLCLIPBOARD);
        CASE_RETURN(WM_SIZECLIPBOARD);
        CASE_RETURN(WM_ASKCBFORMATNAME);
        CASE_RETURN(WM_CHANGECBCHAIN);
        CASE_RETURN(WM_HSCROLLCLIPBOARD);
        CASE_RETURN(WM_QUERYNEWPALETTE);
        CASE_RETURN(WM_PALETTEISCHANGING);
        CASE_RETURN(WM_PALETTECHANGED);
        CASE_RETURN(WM_HOTKEY);
        CASE_RETURN(WM_PRINT);
        CASE_RETURN(WM_PRINTCLIENT);
        CASE_RETURN(WM_APPCOMMAND);
        CASE_RETURN(WM_THEMECHANGED);
        CASE_RETURN(WM_CLIPBOARDUPDATE);
        CASE_RETURN(WM_DWMCOMPOSITIONCHANGED);
        CASE_RETURN(WM_DWMNCRENDERINGCHANGED);
        CASE_RETURN(WM_DWMCOLORIZATIONCOLORCHANGED);
        CASE_RETURN(WM_DWMWINDOWMAXIMIZEDCHANGE);
        CASE_RETURN(WM_DWMSENDICONICTHUMBNAIL);
        CASE_RETURN(WM_DWMSENDICONICLIVEPREVIEWBITMAP);
        CASE_RETURN(WM_GETTITLEBARINFOEX);
        CASE_RETURN(WM_HANDHELDFIRST);
        CASE_RETURN(WM_HANDHELDLAST);
        CASE_RETURN(WM_AFXFIRST);
        CASE_RETURN(WM_AFXLAST);
        CASE_RETURN(WM_PENWINFIRST);
        CASE_RETURN(WM_PENWINLAST);
        CASE_RETURN(WM_APP);
        CASE_RETURN(WM_USER);




    default:
        StringCchPrintfW(Buf, ARRAYSIZE(Buf), L"?%d?", nCode);
        return Buf;
    }
}
